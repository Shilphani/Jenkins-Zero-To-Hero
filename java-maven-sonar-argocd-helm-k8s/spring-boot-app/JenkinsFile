pipeline {
  agent {
    docker {
      image 'shilphani/springbootCICD:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        //git branch: 'main', url: 'https://github.com/iam-veeramalla/Jenkins-Zero-To-Hero.git'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://15.207.71.106:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('create docker image'){
    steps {
    sh "docker build -t shilphani/springbootCICD:$buildNumber ."
  } // close steps  
}  // close stage

stage('dockerhub login'){
    steps {
    sh "docker login -u shilphani -p Shilpa@28"
  } // close steps  
}  // close stage

stage('image push dockerhub'){
	steps {
	sh "docker push shiphani/springbootCICD:$buildNumber"	
  } // close steps  
}  // close stage
   stage('update image tag'){
	steps {
	sh "sed -i 's|TAG|$buildNumber|g' deplyment.yml"
  } // close steps  
}  // close stage

stage('deploy kubernetes cluster '){
    steps {
    sh "kubectl apply -f deployment.yml"
  } // close steps  
}  // close stage
}
}
